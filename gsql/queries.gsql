USE GRAPH $TG_GRAPH

DROP QUERY SimilarChunks IF EXISTS

CREATE QUERY SimilarChunks(LIST<FLOAT> query_embedding, INT topk) FOR GRAPH $TG_GRAPH SYNTAX v2 {
  SumAccum<FLOAT> @dot;
  SumAccum<FLOAT> @norm;
  SumAccum<FLOAT> @qnorm;

  FLOAT qnorm = 0.0;
  INT n = query_embedding.size();
  INT i = 0;
  WHILE i < n DO
    qnorm = qnorm + query_embedding[i] * query_embedding[i];
    i = i + 1;
  END;
  qnorm = sqrt(qnorm);

  Start = {Document.*};

  Start = SELECT d FROM Start:d POST-ACCUM
    d.@dot = 0.0,
    d.@norm = 0.0,
    d.@qnorm = qnorm,
    i = 0,
    WHILE i < n DO
      CASE WHEN i < d.embedding.size() THEN
        d.@dot += d.embedding[i] * query_embedding[i];
        d.@norm += d.embedding[i] * d.embedding[i];
      END,
      i = i + 1
    END
  ;

  Start = SELECT d FROM Start:d
    ACCUM d.@norm = sqrt(d.@norm)
    ORDER BY CASE WHEN d.@norm * d.@qnorm == 0 THEN 0 ELSE d.@dot / (d.@norm * d.@qnorm) END DESC
    LIMIT topk
  ;

  PRINT Start[
    Start.id AS id,
    Start.doc_id AS doc_id,
    Start.chunk_id AS chunk_id,
    Start.title AS title,
    Start.source AS source,
    Start.uri AS uri,
    Start.http_url AS http_url,
    Start.content AS content,
    Start.metadata AS metadata,
    CASE WHEN d.@norm * d.@qnorm == 0 THEN 0 ELSE d.@dot / (d.@norm * d.@qnorm) END AS score
  ];
}

INSTALL QUERY SimilarChunks

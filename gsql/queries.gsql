USE GRAPH DocGraph

CREATE QUERY TopKSimilar(LIST<FLOAT> q, INT topk) FOR GRAPH DocGraph SYNTAX v2 {
  SumAccum<FLOAT> @dot;
  SumAccum<FLOAT> @norm;
  SumAccum<FLOAT> @qnorm;

  FLOAT qnorm = 0.0;
  INT n = q.size();
  INT i = 0;
  while i < n do
    qnorm = qnorm + q[i]*q[i];
    i = i + 1;
  end;
  qnorm = sqrt(qnorm);

  Start = {Document.*};

  Start = SELECT d FROM Start:d POST-ACCUM
    d.@dot=0.0, d.@norm=0.0, d.@qnorm=qnorm,
    i=0, WHILE i<n DO
      CASE WHEN i<d.embedding.size() THEN
        d.@dot += d.embedding[i]*q[i];
        d.@norm += d.embedding[i]*d.embedding[i];
      END,
      i=i+1
    END
  ;

  Start = SELECT d FROM Start:d
    ACCUM d.@norm = sqrt(d.@norm)
    ORDER BY CASE WHEN d.@norm*d.@qnorm==0 THEN 0 ELSE d.@dot/(d.@norm*d.@qnorm) END DESC
    LIMIT topk
  ;

  PRINT Start[Start.id AS id, Start.title AS title, Start.uri AS uri, Start.http_url AS http_url,
              (CASE WHEN d.@norm*d.@qnorm==0 THEN 0 ELSE d.@dot/(d.@norm*d.@qnorm) END) AS score];
}

INSTALL QUERY TopKSimilar
